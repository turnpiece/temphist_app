# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Regenerate certificates (nuke and recreate)"
  lane :regenerate_certificates do
    setup_ci 

    # Set up API key for App Store Connect
    api_key = app_store_connect_api_key(
      key_id: ENV["APP_STORE_KEY_ID"],
      issuer_id: ENV["APP_STORE_ISSUER_ID"],
      key_content: ENV["APP_STORE_PRIVATE_KEY"],
      is_key_content_base64: true
    )

    # Clear any existing keychain issues
    clear_derived_data

    # Nuke existing certificates first
    match(
      api_key: api_key,
      type: "development",
      readonly: false
    )
    
    match(
      api_key: api_key,
      type: "distribution",
      readonly: false
    )

    UI.success("âœ… Certificate regeneration complete!")
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Set up authentication for automatic signing FIRST (before setup_ci)
    ENV["SPACESHIP_CONNECT_API_KEY_ID"] = ENV["APP_STORE_KEY_ID"]
    ENV["SPACESHIP_CONNECT_API_ISSUER_ID"] = ENV["APP_STORE_ISSUER_ID"]
    ENV["SPACESHIP_CONNECT_API_PRIVATE_KEY_CONTENT"] = ENV["APP_STORE_PRIVATE_KEY"]
    ENV["SPACESHIP_CONNECT_API_IN_HOUSE"] = "false"

    setup_ci 

    # Set up API key for App Store Connect
    api_key = app_store_connect_api_key(
      key_id: ENV["APP_STORE_KEY_ID"],
      issuer_id: ENV["APP_STORE_ISSUER_ID"],
      key_content: ENV["APP_STORE_PRIVATE_KEY"],
      is_key_content_base64: true
    )

    # Clear any existing keychain issues
    clear_derived_data

    # Build with Flutter
    sh("cd .. && bundle exec flutter build ios --release --no-codesign")
  
    # bump build number to current UTC timestamp YYYYMMDDHHMM
    increment_build_number(
      xcodeproj: "Runner.xcodeproj",
      build_number: Time.now.utc.strftime("%Y%m%d%H%M")
    )

    # Debug information
    UI.message("Using bundle id: #{ENV['IOS_BUNDLE_ID'] || 'com.turnpiece.temphist'}")
    UI.message("Using team id: #{ENV['APPLE_TEAM_ID'] || '77X2NFV437'}")
    UI.message("Provisioning profile specifier: match AppStore #{ENV['IOS_BUNDLE_ID'] || 'com.turnpiece.temphist'}")
    UI.message("DEVELOPER_DIR: #{ENV['DEVELOPER_DIR']}")

    # Ensure we have the right certificates and profiles
    match(
      api_key: api_key,
      type: "appstore",
      readonly: true
    )

    spec = "match AppStore #{ENV['IOS_BUNDLE_ID'] || 'com.turnpiece.temphist'}"
    profile_found = sh(%Q[grep -l "#{spec}" ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision || true]).to_s.strip
    UI.user_error!("Provisioning profile specifier '#{spec}' not found in installed profiles") if profile_found.empty?

    sh %q[xcodebuild -showBuildSettings -workspace ./Runner.xcworkspace -scheme Runner -configuration Release | egrep "CODE_SIGN|PROVISION|DEVELOPMENT_TEAM|PRODUCT_BUNDLE_IDENTIFIER|CODE_SIGNING_ALLOWED"]
    sh %q[security find-identity -v -p codesigning ~/Library/Keychains/fastlane_tmp_keychain-db || true]
    sh %q[ls -l ~/Library/MobileDevice/Provisioning\ Profiles || true]

    build_app(
      workspace: "./Runner.xcworkspace",
      scheme: "Runner",
      configuration: "Release",
      export_method: "app-store",
      skip_profile_detection: true,
      # Signing overrides (Manual)
      xcargs: %Q[
        CODE_SIGN_STYLE=Manual
        DEVELOPMENT_TEAM=#{ENV["APPLE_TEAM_ID"] || "77X2NFV437"}
        CODE_SIGN_IDENTITY="Apple Distribution"
        PROVISIONING_PROFILE_SPECIFIER="match AppStore #{ENV["IOS_BUNDLE_ID"] || "com.turnpiece.temphist"}"
      ],
      export_options: {
        provisioningProfiles: {
          "#{ENV["IOS_BUNDLE_ID"] || "com.turnpiece.temphist"}" => "match AppStore #{ENV["IOS_BUNDLE_ID"] || "com.turnpiece.temphist"}"
        }
      },
      destination: "generic/platform=iOS",
      buildlog_path: "~/Library/Logs/gym"
    )

    upload_to_testflight(api_key: api_key)
  end
end
