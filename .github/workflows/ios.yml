name: iOS Build (Flutter)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: üöÄ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: üîç Check Flutter and Dart versions
        run: |
          flutter --version
          dart --version

      - name: üì¶ Install dependencies
        run: flutter pub get

      - name: üîê Decode GoogleService-Info.plist
        run: |
          echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST_B64 }}" | base64 --decode > ios/Runner/GoogleService-Info.plist

      - name: Clear match cache
        run: rm -rf ~/Library/MobileDevice/Provisioning\ Profiles/*

      - name: Remove old match repo
        run: rm -rf /Users/runner/.fastlane/ci/*

      - name: Clean DerivedData
        run: rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Verify Xcode version
        run: |
          xcode-select -p
          xcodebuild -version

      - name: üõ†Ô∏è Install Fastlane
        working-directory: ios
        run: bundle install

      - name: üì¶ Install CocoaPods dependencies
        working-directory: ios
        run: bundle exec pod install

      - name: üîë Create temporary keychain
        run: |
          KEYCHAIN=build.keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN"
          security set-keychain-settings -t 3600 -u "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN"
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: üîê Test keychain password
        run: |
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$HOME/Library/Keychains/login.keychain-db"
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: üì¶ Install Gems & run Fastlane
        run: bundle exec fastlane ios beta
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: üöÄ Upload to TestFlight with Fastlane
        working-directory: ios
        run: bundle exec fastlane beta --verbose
        env:
          APP_STORE_KEY_ID: ${{ secrets.APP_STORE_KEY_ID }}
          APP_STORE_ISSUER_ID: ${{ secrets.APP_STORE_ISSUER_ID }}
          APP_STORE_PRIVATE_KEY: ${{ secrets.APP_STORE_PRIVATE_KEY }}
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
          APP_STORE_TEAM_ID: ${{ secrets.APP_STORE_TEAM_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          FASTLANE_DISABLE_COLORS: 1

      - name: ‚úÖ Archive output
        run: |
          mkdir -p build-artifacts
          IPA_PATH=$(find ios -name "*.ipa" | head -n 1)
          echo "Found IPA at: $IPA_PATH"
          cp "$IPA_PATH" build-artifacts/

      - name: üíæ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: build-artifacts
