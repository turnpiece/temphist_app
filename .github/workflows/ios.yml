name: iOS Build (Flutter)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: Update version for release
        run: |
          # Update version numbers based on git tag
          VERSION=${GITHUB_REF#refs/tags/}
          RELEASE_DATE=$(date +'%Y-%m-%d')
          echo "Updating version to: ${VERSION#v}"
          echo "Setting release date to: $RELEASE_DATE"

          # Update version in all config files
          sed -i "s/appVersion = '.*'/appVersion = '${VERSION#v}'/" lib/config/*.dart

          # Update release date in all config files
          sed -i "s/releaseDate = '.*'/releaseDate = '$RELEASE_DATE'/" lib/config/*.dart

          echo "Version and release date update complete"

      - name: üöÄ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: üîç Check Flutter and Dart versions
        run: |
          flutter --version
          dart --version

      - name: üì¶ Install dependencies
        run: flutter pub get

      - name: üîê Decode GoogleService-Info.plist
        run: |
          echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST_B64 }}" | base64 --decode > ios/Runner/GoogleService-Info.plist

      - name: Clear match cache
        run: rm -rf ~/Library/MobileDevice/Provisioning\ Profiles/*

      - name: Remove old match repo
        run: rm -rf /Users/runner/.fastlane/ci/*

      - name: Clean DerivedData
        run: rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Verify Xcode version
        run: |
          xcode-select -p
          xcodebuild -version

      - name: üõ†Ô∏è Install Fastlane
        working-directory: ios
        run: bundle install

      - name: üì¶ Install CocoaPods dependencies
        working-directory: ios
        run: bundle exec pod install

      - name: üöÄ Upload to TestFlight with Fastlane
        working-directory: ios
        run: bundle exec fastlane beta --verbose
        env:
          APP_STORE_KEY_ID: ${{ secrets.APP_STORE_KEY_ID }}
          APP_STORE_ISSUER_ID: ${{ secrets.APP_STORE_ISSUER_ID }}
          APP_STORE_PRIVATE_KEY: ${{ secrets.APP_STORE_PRIVATE_KEY }}
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
          APP_STORE_TEAM_ID: ${{ secrets.APP_STORE_TEAM_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: https://x-access-token:${{ secrets.MATCH_GIT_PAT }}@github.com/turnpiece/apple-certs.git
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          FASTLANE_DISABLE_COLORS: 1

      - name: ‚úÖ Archive output
        run: |
          mkdir -p build-artifacts
          IPA_PATH=$(find ios -name "*.ipa" | head -n 1)
          echo "Found IPA at: $IPA_PATH"
          cp "$IPA_PATH" build-artifacts/

      - name: üíæ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: build-artifacts
